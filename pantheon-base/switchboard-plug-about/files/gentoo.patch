--- old/src/Plug.vala	2014-08-28 01:28:10.222088000 +0200
+++ new/src/Plug.vala	2014-08-28 01:30:13.557542734 +0200
@@ -18,9 +18,9 @@
 public class About.Plug : Switchboard.Plug {
 
     private string os;
+    private string kernel;
     private string website_url;
     private string bugtracker_url;
-    private string codename;
     private string version;
     private string arch;
     private string processor;
@@ -28,11 +28,7 @@
     private string graphics;
     private string hdd;
     private Gtk.Label based_off;
-    
-    
-    private string is_ubuntu;
-    private string ubuntu_version;
-    private string ubuntu_codename;
+
     private Gtk.EventBox main_grid;
 
     public Plug () {
@@ -42,7 +38,7 @@
                 description: _("View System Information"),
                 icon: "help-info");
     }
-    
+
     public override Gtk.Widget get_widget () {
         if (main_grid == null) {
             setup_info ();
@@ -91,77 +87,29 @@
 
     // Gets all the hardware info
     private void setup_info () {
-
         // Operating System
-        
-        File file = File.new_for_path("/etc/lsb-release");
+        os = "Gentoo";
+
+        // kernel
         try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                if ("DISTRIB_ID=" in line) {
-                    os = line.replace ("DISTRIB_ID=", "");
-                    if ("\"" in os) {
-                        os = os.replace ("\"", "");
-                    }
-                } else if ("DISTRIB_RELEASE=" in line) {
-                    version = line.replace ("DISTRIB_RELEASE=", "");
-                } else if ("DISTRIB_CODENAME=" in line) {
-                    codename = line.replace ("DISTRIB_CODENAME=", "");
-                    codename = capitalize (codename);
-                }
-            }
+            Process.spawn_command_line_sync ("uname -s", out kernel);
         } catch (Error e) {
-            warning("Couldn't read lsb-release file, assuming elementary OS 0.3");
-            os = "elementary OS";
-            version = "0.3";
-            codename = "Freya";
+            // assuming Linux
+            warning (e.message);
+            kernel = "Linux";
         }
-        
-        file = File.new_for_path("/etc/upstream-release/lsb-release");
+
+        // version
         try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                if ("DISTRIB_ID=" in line) {
-                    is_ubuntu = line.replace ("DISTRIB_ID=", "");
-                } else if ("DISTRIB_RELEASE=" in line) {
-                    ubuntu_version = line.replace ("DISTRIB_RELEASE=", "");
-                } else if ("DISTRIB_CODENAME=" in line) {
-                    ubuntu_codename = line.replace ("DISTRIB_CODENAME=", "");
-                    ubuntu_codename = capitalize (ubuntu_codename);
-                }
-            }
+            Process.spawn_command_line_sync ("uname -r", out version);
         } catch (Error e) {
-            warning("Couldn't read upstream lsb-release file, assuming none");
-            is_ubuntu = null;
-            ubuntu_version = null;
-            ubuntu_codename = null;
+            warning (e.message);
+            version = _("Unknown");
         }
 
         //Bugtracker and website
-        file = File.new_for_path("/etc/dpkg/origins/"+os);
-        bugtracker_url = "";
-        website_url = "";
-        try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                 if (line.has_prefix("Bugs:")) {
-                    bugtracker_url = line.replace ("Bugs: ", "");
-                }
-            }
-        } catch (Error e) {
-            warning(e.message);
-            warning("Couldn't find bugtracker/website, using elementary OS defaults");
-            if (website_url == "")
-                website_url = "http://elementaryos.org";
-            if (bugtracker_url == "")
-                bugtracker_url = "https://bugs.launchpad.net/elementaryos/+filebug";
-        }
+        website_url = "http://www.gentoo.org";
+        bugtracker_url = "https://bugs.gentoo.org";
 
         // Architecture
         try {
@@ -232,7 +180,7 @@
         }
 
         // Hard Drive
-        
+
         var file_root = GLib.File.new_for_path ("/");
         try {
             var info = file_root.query_filesystem_info (GLib.FileAttribute.FILESYSTEM_SIZE, null);
@@ -272,18 +220,12 @@
         var logo = new Gtk.Image.from_icon_name ("distributor-logo", Gtk.icon_size_register ("LOGO", 128, 128));
 
         var title = new Gtk.Label (null);
-        title.set_markup (("%s %s %s <sup><small>(%s)</small></sup>").printf (os, version, codename, arch));
+        title.set_markup (("%s %s %s<sup><small>(%s)</small></sup>").printf (os, kernel, version, arch));
         title.get_style_context ().add_class ("h2");
         title.set_alignment (0, 0);
         title.set_selectable (true);
-        
-        if (is_ubuntu != null) {
-            based_off = new Gtk.Label (_("Built on %s %s").printf (is_ubuntu, ubuntu_version));
-            based_off.set_alignment (0, 0);
-            based_off.set_selectable (true);
-        }
 
-        var website_label = new Gtk.LinkButton.with_label ("http://elementaryos.org", "Website");
+        var website_label = new Gtk.LinkButton.with_label ("http://gentoo.org", "Website");
         website_label.set_alignment (0, 0);
 
         var details = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
@@ -352,22 +294,6 @@
         hardware_grid.attach (graphics_info, 100, 120, 100, 25);
         hardware_grid.attach (hdd_info, 100, 160, 100, 25);
 
-        var help_button = new Gtk.Button.with_label ("?");
-        help_button.get_style_context ().add_class ("help_button");
-        help_button.halign = Gtk.Align.CENTER;
-
-        help_button.clicked.connect (() => {
-            try {
-                AppInfo.launch_default_for_uri ("http://elementaryos.org/support", null);
-            } catch (Error e) {
-                warning (e.message);
-            }
-        });
-
-        help_button.size_allocate.connect ( (alloc) => {
-            help_button.set_size_request (alloc.height, -1);
-        });
-
         // Translate button
         var translate_button = new Gtk.Button.with_label (_("Suggest Translations"));
         translate_button.clicked.connect (() => {
@@ -388,34 +314,21 @@
             }
         });
 
-        // Update button
-        var update_button = new Gtk.Button.with_label (_("Check for Updates"));
-        update_button.clicked.connect (() => {
-            try {
-                Process.spawn_command_line_async("update-manager");
-            } catch (Error e) {
-                warning (e.message);
-            }
-        });
-
         // Create a box for the buttons
         var button_box = new Gtk.ButtonBox (Gtk.Orientation.HORIZONTAL);
-        button_box.pack_start (help_button, false, false, 0);
-        button_box.set_child_non_homogeneous (help_button, true);
         button_box.pack_end (translate_button, false, false, 0);
         button_box.pack_end (bug_button, false, false, 0);
-        button_box.pack_end (update_button, false, false, 0);
-        
+
         // Fit everything in a box
         var box = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
-        box.pack_start (elementary_box, false, false, 24);
+        box.pack_start (elementary_box, false, false, 36);
         box.pack_start (hardware_grid, false, false, 48);
-        box.pack_end (button_box, false, false, 0);;
+        box.pack_end (button_box, false, false, 0);
         box.set_margin_top (24);
         box.set_margin_bottom (24);
 
         // Let's align the box and add it to the plug
-        var halign = new Gtk.Alignment ((float) 0.5, 0, 0, 1);
+        var halign = new Gtk.Alignment (0.5f, 0.5f, 0, 1);
         halign.add (box);
         main_grid.add (halign);
         main_grid.show_all ();
